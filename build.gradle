plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.ajoberstar.grgit' version '5.0.0'
    id 'java'
}

group 'net.william278'
version "$ext.plugin_version-${versionMetadata()}"

ext {
    set 'version', version.toString()
}

import org.apache.tools.ant.filters.ReplaceTokens

allprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'

    compileJava.options.encoding = 'UTF-8'
    javadoc.options.encoding = 'UTF-8'
    compileJava.options.release.set 16
    javadoc.options.addStringOption('Xdoclint:none', '-quiet')

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url 'https://repo.velocitypowered.com/snapshots/' }
        maven { url 'https://repo.minebench.de/' }
        maven { url 'https://repo.wea-ondara.net/repository/public/' }
        maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
        maven { url 'https://jitpack.io' }
    }

    processResources {
        filesNotMatching(['**/*.png', '**/*.svg']) {
            filter ReplaceTokens as Class, beginToken: '${', endToken: '}',
                    tokens: rootProject.ext.properties
        }
    }
}

subprojects {
    version rootProject.version
    archivesBaseName = "${rootProject.name}-${project.name.capitalize()}"

    if (['bukkit', 'bungeecord', 'velocity', 'plugin'].contains(project.name)) {
        shadowJar {
            destinationDirectory.set(file("$rootDir/target"))
            archiveClassifier.set('')
        }
        jar.dependsOn shadowJar
        clean.delete "$rootDir/target"
    }
}

logger.lifecycle("Building HuskChat ${version} by William278")

@SuppressWarnings('GrMethodMayBeStatic')
def versionMetadata() {
    // Get if there is a tag for this commit
    def tag = grgit.tag.list().find { it.commit.id == grgit.head().id }
    if (tag != null) {
        return ''
    }

    // Otherwise, get the last commit hash and if it's a clean head
    if (grgit == null) {
        return System.getenv("GITHUB_RUN_NUMBER") ? 'build.' + System.getenv("GITHUB_RUN_NUMBER") : 'unknown'
    }
    return grgit.head().abbreviatedId + (grgit.status().clean ? '' : '-indev')
}