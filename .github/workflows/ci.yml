# Builds, tests the project with Gradle and uploads to Modrinth
name: Java CI

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'docs/**'
      - 'workflows/**'
      - 'README.md'

permissions:
  contents: read
  checks: write

env:
  LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/jep/

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.8'
      - name: Install Python dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install jep
          python -m pip install alt-profanity-check
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: build test publish
        env:
          SNAPSHOTS_MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          SNAPSHOTS_MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Query Version
        run: |
          echo "::set-output name=VERSION_NAME::$(${{github.workspace}}/gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')"
        id: fetch-version
      - name: Get Version
        run: |
          echo "version_name=${{steps.fetch-version.outputs.VERSION_NAME}}" >> $GITHUB_ENV
      - name: Upload to Modrinth & Hangar
        uses: WiIIiam278/mc-publish@hangar
        with:
          modrinth-id: SSXTD3me
          modrinth-featured: false
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          hangar-id: William278/HuskChat
          hangar-token: ${{ secrets.HANGAR_API_KEY }}
          files-primary: target/HuskChat-Plugin-${{ env.version_name }}.jar
          name: HuskChat v${{ env.version_name }}
          version: ${{ env.version_name }}
          changelog: ${{ github.event.head_commit.message }}
          hangar-version-type: Alpha
          modrinth-version-type: alpha
          game-versions: |
            1.17
            1.17.1
            1.18
            1.18.1
            1.18.2
            1.19
            1.19.1
            1.19.2
            1.19.3
            1.19.4
            1.20
            1.20.1
            1.20.2
            1.20.3
            1.20.4
          modrinth-dependencies: |
            luckperms | suggests | *
            papiproxybridge | suggests | *
            placeholderapi | suggests | *
          loaders: |
            bungeecord
            velocity
            spigot
            paper
            folia
          java: 17
      - name: Upload GitHub Artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: HuskChat Plugin
          path: target/HuskChat-Plugin-*.jar